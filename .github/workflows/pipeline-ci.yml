name: CI With Maven

on:
  push:

jobs:
  
  build:
    
    runs-on: ubuntu-latest

    steps:
    
      - name: Clonacion de Codigo
        uses: actions/checkout@v4

      - name: Setup Java JDK
        uses: actions/setup-java@v4.2.1
        with:
          java-version: "8"
          distribution: "temurin"

      - name: Build With Maven
        run: |
          mvn package
          
      - name: Ejecucion Test Unitarios
        run: |
          mvn package test

      - name: Jacoco Report
        run: |
          mvn jacoco:report

      - name: jacoco report publish
        uses: madrapps/jacoco-report@v1.6.1
        with:
            paths: ${{ github.workspace }}/**/target/site/jacoco/jacoco.xml
            token: ${{ secrets.JACOCO_TOKEN }}
            min-coverage-overall: 70
      
      # agregar lo de jacoco para calculo de covertura de test unitario se agrega dentro del pom
      
      - name: Setup Java JDK
        uses: actions/setup-java@v4.2.1
        with:
          java-version: '17'
          distribution: 'temurin'
          
      - name: Analisis Codigo Estatico SonarCloud
        run: |
          mvn clean verify org.sonarsource.scanner.maven:sonar-maven-plugin:3.11.0.3922:sonar \
          -Dsonar.token=${{ secrets.SONAR_TOKEN }} \
          -Dsonar.host.url=https://sonarcloud.io \
          -Dsonar.organization=luiscalquin \
          -Dsonar.projectKey=luiscalquin_microservicio-java
          
      #- name: SonarQube Quality Gate Check
        #uses: SonarSource/sonarqube-quality-gate-action@v1.1.0
        #env:
           #SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
           #SONAR_HOST_URL: https://sonarcloud.io
        #with:
           #scanMetadataReportFile: target/sonar/report-task.txt       
         
      - name: Docker Login
        uses: docker/login-action@v3.1.0
        with:
          username: "lcalquin@gmail.com"
          password: ${{ secrets.DOCKERHUB_PASS }}

      - name: Set up Docker Build
        uses: docker/setup-buildx-action@v3

      - name: Docker Build
        run: |
          docker build -t lcalquin/microservicio-java:latest .

      - name: Docker Push
        run: |
          docker push lcalquin/microservicio-java:latest

  deploy:
      needs: build
      runs-on: self-hosted
      
      steps:

      - name: Clonacion de Codigo
        uses: actions/checkout@v4
        
      - name: Despliegue
        run: |
          kubectl apply -f deploy.yaml

  jmeter_test:
    runs-on: self-hosted

    steps:
      
    - name: Run JMeter tests
      run: |
        cd C:\apache-jmeter-5.6.3\bin
        ./jmeter -n -t C:\apache-jmeter-5.6.3\test\test_plan.jmx -l C:\apache-jmeter-5.6.3\test\test-results.jtl
      
    - name: Upload Test Results
      uses: actions/upload-artifact@v4
      with:
          name: jmeter-results
          path: C:\apache-jmeter-5.6.3\test\test-results.jt
